// Copyright (C) 1991-2009 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "04/15/2011 18:08:45"
                                                                                
// Verilog Test Bench template for design : Project1
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module Project1_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg clock;
reg reset;
// wires                                               
wire [4:0] a;
wire [7:0] Addr;
wire alusrc;
wire [4:0] b;
wire aluop;
wire [1:0] btype;
wire [4:0] c;
wire [15:0] d;
wire [5:0] func;
wire memtoreg;
wire memwr;
wire [5:0] op;
wire [31:0] q;
wire [7:0] read1;
wire [7:0] read2;
wire regdst;
wire regwr;
wire [7:0] sol;
wire [7:0] rshift;
wire [7:0] result;
wire [7:0] truncate;
wire out;

// assign statements (if any)                          
Project1 i1 (
// port map - connection between master ports and signals/registers   
	.a(a),
	.Addr(Addr),
	.alusrc(alusrc),
	.b(b),
	.c(c),
	.clock(clock),
	.d(d),
	.truncate(truncate),
	.rshift(rshift),
	.sol(sol),
	.btype(btype),
	.out(out),
	.aluop(aluop),
	.func(func),
	.memtoreg(memtoreg),
	.memwr(memwr),
	.op(op),
	.q(q),
	.read1(read1),
	.read2(read2),
	.regdst(regdst),
	.regwr(regwr),
	.reset(reset),
	.result(result)
);
initial                                                
begin                                                  
clock=0;
reset=0;  
$display("Running testbench");                       
end                                                    
always                                                             
begin
#30000 clock=~clock;                                                  
                     
                                                       
//@eachvec;                                              
// --> end                                             
end                                                    
endmodule

