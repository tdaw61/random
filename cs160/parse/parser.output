Terminals unused in grammar

   COMMENT
   OR
   END
   IDENT


State 1 conflicts: 1 shift/reduce
State 4 conflicts: 1 shift/reduce
State 69 conflicts: 1 shift/reduce
State 82 conflicts: 12 shift/reduce
State 106 conflicts: 1 shift/reduce
State 112 conflicts: 1 shift/reduce
State 113 conflicts: 1 shift/reduce
State 114 conflicts: 1 shift/reduce
State 115 conflicts: 1 shift/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 1 shift/reduce
State 118 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 120 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 124 conflicts: 1 shift/reduce
State 134 conflicts: 12 shift/reduce
State 140 conflicts: 25 reduce/reduce
State 147 conflicts: 12 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: /* empty */
    2     | ROOT Program

    3 Program: Functions

    4 Functions: /* empty */
    5          | Functions Function

    6 Function: FUNCTION LITERAL OPAREN Parameterlist CPAREN COLON Returntype OFUNC bodyoffunction CFUNC

    7 Returntype: BOOLEAN
    8           | INT

    9 Parameterlist: /* empty */
   10              | List Returntype More

   11 More: SEMI Parameterlist
   12     | /* empty */

   13 List: LITERAL List
   14     | COMMA List
   15     | COLON

   16 bodyoffunction: variabledec Functions Statements ReturnStatement

   17 ReturnStatement: RETURN expression SEMI

   18 variabledec: /* empty */
   19            | VAR List Type SEMI variabledec

   20 Type: INT
   21     | BOOLEAN
   22     | INTARRAY OARRAY NUM CARRAY

   23 Statements: /* empty */
   24           | Statement Statements

   25 Statement: LITERAL assignment
   26          | if
   27          | for
   28          | while

   29 if: IF OPAREN expression CPAREN OFUNC bodyofnested CFUNC else

   30 else: /* empty */
   31     | ELSE OFUNC bodyofnested CFUNC

   32 for: FOR OPAREN posstate OPAREN expression CPAREN posstate CPAREN OFUNC bodyofnested CFUNC

   33 posstate: /* empty */
   34         | Statement

   35 bodyofnested: /* empty */
   36             | Statement bodyofnested

   37 while: WHILE OPAREN expression CPAREN OFUNC bodyofnested CFUNC

   38 assignment: EQ expression SEMI
   39           | OARRAY expression CARRAY EQ expression SEMI

   40 expression: expression PLUS expression
   41           | expression ABS ABS expression
   42           | expression AND expression
   43           | expression GT expression
   44           | expression GE expression
   45           | expression LT expression
   46           | expression LE expression
   47           | expression NE expression
   48           | expression DEQ expression
   49           | expression MINUS expression
   50           | expression DIVIDE expression
   51           | expression MULT expression
   52           | OPAREN expression CPAREN
   53           | DECIMAL
   54           | Neg
   55           | TRUE
   56           | FALSE
   57           | NOT expression
   58           | ABS expression ABS

   59 Neg: Term
   60    | MINUS Term

   61 Term: HEX
   62     | OCT
   63     | BIN
   64     | NUM
   65     | ZERO
   66     | LITERAL dec

   67 dec: OARRAY expression CARRAY
   68    | OPAREN functioncall CPAREN
   69    | /* empty */

   70 functioncall: /* empty */
   71             | expression functioncall
   72             | COMMA functioncall


Terminals, with rules where they appear

$end (0) 0
error (256)
COMMENT (258)
EQ (259) 38 39
DEQ (260) 48
NE (261) 47
LT (262) 45
LE (263) 46
GT (264) 43
GE (265) 44
PLUS (266) 40
MINUS (267) 49 60
DIVIDE (268) 50
AND (269) 42
OR (270)
NOT (271) 57
SEMI (272) 11 17 19 38 39
COMMA (273) 14 72
ABS (274) 41 58
OFUNC (275) 6 29 31 32 37
CFUNC (276) 6 29 31 32 37
OPAREN (277) 6 29 32 37 52 68
CPAREN (278) 6 29 32 37 52 68
OARRAY (279) 22 39 67
CARRAY (280) 22 39 67
BOOLEAN (281) 7 21
IF (282) 29
ELSE (283) 31
WHILE (284) 37
FOR (285) 32
FUNCTION (286) 6
INTARRAY (287) 22
RETURN (288) 17
TRUE (289) 55
FALSE (290) 56
INT (291) 8 20
DECIMAL (292) 53
HEX (293) 61
OCT (294) 62
BIN (295) 63
ZERO (296) 65
VAR (297) 19
MULT (298) 51
LITERAL (299) 6 13 25 66
END (300)
NUM (301) 22 64
IDENT (302)
COLON (303) 6 15


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
ROOT (50)
    on left: 1 2, on right: 0 2
Program (51)
    on left: 3, on right: 2
Functions (52)
    on left: 4 5, on right: 3 5 16
Function (53)
    on left: 6, on right: 5
Returntype (54)
    on left: 7 8, on right: 6 10
Parameterlist (55)
    on left: 9 10, on right: 6 11
More (56)
    on left: 11 12, on right: 10
List (57)
    on left: 13 14 15, on right: 10 13 14 19
bodyoffunction (58)
    on left: 16, on right: 6
ReturnStatement (59)
    on left: 17, on right: 16
variabledec (60)
    on left: 18 19, on right: 16 19
Type (61)
    on left: 20 21 22, on right: 19
Statements (62)
    on left: 23 24, on right: 16 24
Statement (63)
    on left: 25 26 27 28, on right: 24 34 36
if (64)
    on left: 29, on right: 26
else (65)
    on left: 30 31, on right: 29
for (66)
    on left: 32, on right: 27
posstate (67)
    on left: 33 34, on right: 32
bodyofnested (68)
    on left: 35 36, on right: 29 31 32 36 37
while (69)
    on left: 37, on right: 28
assignment (70)
    on left: 38 39, on right: 25
expression (71)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
    58, on right: 17 29 32 37 38 39 40 41 42 43 44 45 46 47 48 49 50
    51 52 57 58 67 71
Neg (72)
    on left: 59 60, on right: 54
Term (73)
    on left: 61 62 63 64 65 66, on right: 59 60
dec (74)
    on left: 67 68 69, on right: 66
functioncall (75)
    on left: 70 71 72, on right: 68 71 72


state 0

    0 $accept: . ROOT $end

    $default  reduce using rule 1 (ROOT)

    ROOT  go to state 1


state 1

    0 $accept: ROOT . $end
    2 ROOT: ROOT . Program

    $end  shift, and go to state 2

    $end      [reduce using rule 4 (Functions)]
    $default  reduce using rule 4 (Functions)

    Program    go to state 3
    Functions  go to state 4


state 2

    0 $accept: ROOT $end .

    $default  accept


state 3

    2 ROOT: ROOT Program .

    $default  reduce using rule 2 (ROOT)


state 4

    3 Program: Functions .
    5 Functions: Functions . Function

    FUNCTION  shift, and go to state 5

    FUNCTION  [reduce using rule 3 (Program)]
    $default  reduce using rule 3 (Program)

    Function  go to state 6


state 5

    6 Function: FUNCTION . LITERAL OPAREN Parameterlist CPAREN COLON Returntype OFUNC bodyoffunction CFUNC

    LITERAL  shift, and go to state 7


state 6

    5 Functions: Functions Function .

    $default  reduce using rule 5 (Functions)


state 7

    6 Function: FUNCTION LITERAL . OPAREN Parameterlist CPAREN COLON Returntype OFUNC bodyoffunction CFUNC

    OPAREN  shift, and go to state 8


state 8

    6 Function: FUNCTION LITERAL OPAREN . Parameterlist CPAREN COLON Returntype OFUNC bodyoffunction CFUNC

    COMMA    shift, and go to state 9
    LITERAL  shift, and go to state 10
    COLON    shift, and go to state 11

    $default  reduce using rule 9 (Parameterlist)

    Parameterlist  go to state 12
    List           go to state 13


state 9

   14 List: COMMA . List

    COMMA    shift, and go to state 9
    LITERAL  shift, and go to state 10
    COLON    shift, and go to state 11

    List  go to state 14


state 10

   13 List: LITERAL . List

    COMMA    shift, and go to state 9
    LITERAL  shift, and go to state 10
    COLON    shift, and go to state 11

    List  go to state 15


state 11

   15 List: COLON .

    $default  reduce using rule 15 (List)


state 12

    6 Function: FUNCTION LITERAL OPAREN Parameterlist . CPAREN COLON Returntype OFUNC bodyoffunction CFUNC

    CPAREN  shift, and go to state 16


state 13

   10 Parameterlist: List . Returntype More

    BOOLEAN  shift, and go to state 17
    INT      shift, and go to state 18

    Returntype  go to state 19


state 14

   14 List: COMMA List .

    $default  reduce using rule 14 (List)


state 15

   13 List: LITERAL List .

    $default  reduce using rule 13 (List)


state 16

    6 Function: FUNCTION LITERAL OPAREN Parameterlist CPAREN . COLON Returntype OFUNC bodyoffunction CFUNC

    COLON  shift, and go to state 20


state 17

    7 Returntype: BOOLEAN .

    $default  reduce using rule 7 (Returntype)


state 18

    8 Returntype: INT .

    $default  reduce using rule 8 (Returntype)


state 19

   10 Parameterlist: List Returntype . More

    SEMI  shift, and go to state 21

    $default  reduce using rule 12 (More)

    More  go to state 22


state 20

    6 Function: FUNCTION LITERAL OPAREN Parameterlist CPAREN COLON . Returntype OFUNC bodyoffunction CFUNC

    BOOLEAN  shift, and go to state 17
    INT      shift, and go to state 18

    Returntype  go to state 23


state 21

   11 More: SEMI . Parameterlist

    COMMA    shift, and go to state 9
    LITERAL  shift, and go to state 10
    COLON    shift, and go to state 11

    $default  reduce using rule 9 (Parameterlist)

    Parameterlist  go to state 24
    List           go to state 13


state 22

   10 Parameterlist: List Returntype More .

    $default  reduce using rule 10 (Parameterlist)


state 23

    6 Function: FUNCTION LITERAL OPAREN Parameterlist CPAREN COLON Returntype . OFUNC bodyoffunction CFUNC

    OFUNC  shift, and go to state 25


state 24

   11 More: SEMI Parameterlist .

    $default  reduce using rule 11 (More)


state 25

    6 Function: FUNCTION LITERAL OPAREN Parameterlist CPAREN COLON Returntype OFUNC . bodyoffunction CFUNC

    VAR  shift, and go to state 26

    $default  reduce using rule 18 (variabledec)

    bodyoffunction  go to state 27
    variabledec     go to state 28


state 26

   19 variabledec: VAR . List Type SEMI variabledec

    COMMA    shift, and go to state 9
    LITERAL  shift, and go to state 10
    COLON    shift, and go to state 11

    List  go to state 29


state 27

    6 Function: FUNCTION LITERAL OPAREN Parameterlist CPAREN COLON Returntype OFUNC bodyoffunction . CFUNC

    CFUNC  shift, and go to state 30


state 28

   16 bodyoffunction: variabledec . Functions Statements ReturnStatement

    $default  reduce using rule 4 (Functions)

    Functions  go to state 31


state 29

   19 variabledec: VAR List . Type SEMI variabledec

    BOOLEAN   shift, and go to state 32
    INTARRAY  shift, and go to state 33
    INT       shift, and go to state 34

    Type  go to state 35


state 30

    6 Function: FUNCTION LITERAL OPAREN Parameterlist CPAREN COLON Returntype OFUNC bodyoffunction CFUNC .

    $default  reduce using rule 6 (Function)


state 31

    5 Functions: Functions . Function
   16 bodyoffunction: variabledec Functions . Statements ReturnStatement

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    FOR       shift, and go to state 38
    FUNCTION  shift, and go to state 5
    LITERAL   shift, and go to state 39

    $default  reduce using rule 23 (Statements)

    Function    go to state 6
    Statements  go to state 40
    Statement   go to state 41
    if          go to state 42
    for         go to state 43
    while       go to state 44


state 32

   21 Type: BOOLEAN .

    $default  reduce using rule 21 (Type)


state 33

   22 Type: INTARRAY . OARRAY NUM CARRAY

    OARRAY  shift, and go to state 45


state 34

   20 Type: INT .

    $default  reduce using rule 20 (Type)


state 35

   19 variabledec: VAR List Type . SEMI variabledec

    SEMI  shift, and go to state 46


state 36

   29 if: IF . OPAREN expression CPAREN OFUNC bodyofnested CFUNC else

    OPAREN  shift, and go to state 47


state 37

   37 while: WHILE . OPAREN expression CPAREN OFUNC bodyofnested CFUNC

    OPAREN  shift, and go to state 48


state 38

   32 for: FOR . OPAREN posstate OPAREN expression CPAREN posstate CPAREN OFUNC bodyofnested CFUNC

    OPAREN  shift, and go to state 49


state 39

   25 Statement: LITERAL . assignment

    EQ      shift, and go to state 50
    OARRAY  shift, and go to state 51

    assignment  go to state 52


state 40

   16 bodyoffunction: variabledec Functions Statements . ReturnStatement

    RETURN  shift, and go to state 53

    ReturnStatement  go to state 54


state 41

   24 Statements: Statement . Statements

    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    FOR      shift, and go to state 38
    LITERAL  shift, and go to state 39

    $default  reduce using rule 23 (Statements)

    Statements  go to state 55
    Statement   go to state 41
    if          go to state 42
    for         go to state 43
    while       go to state 44


state 42

   26 Statement: if .

    $default  reduce using rule 26 (Statement)


state 43

   27 Statement: for .

    $default  reduce using rule 27 (Statement)


state 44

   28 Statement: while .

    $default  reduce using rule 28 (Statement)


state 45

   22 Type: INTARRAY OARRAY . NUM CARRAY

    NUM  shift, and go to state 56


state 46

   19 variabledec: VAR List Type SEMI . variabledec

    VAR  shift, and go to state 26

    $default  reduce using rule 18 (variabledec)

    variabledec  go to state 57


state 47

   29 if: IF OPAREN . expression CPAREN OFUNC bodyofnested CFUNC else

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 71
    Neg         go to state 72
    Term        go to state 73


state 48

   37 while: WHILE OPAREN . expression CPAREN OFUNC bodyofnested CFUNC

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 74
    Neg         go to state 72
    Term        go to state 73


state 49

   32 for: FOR OPAREN . posstate OPAREN expression CPAREN posstate CPAREN OFUNC bodyofnested CFUNC

    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    FOR      shift, and go to state 38
    LITERAL  shift, and go to state 39

    $default  reduce using rule 33 (posstate)

    Statement  go to state 75
    if         go to state 42
    for        go to state 43
    posstate   go to state 76
    while      go to state 44


state 50

   38 assignment: EQ . expression SEMI

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 77
    Neg         go to state 72
    Term        go to state 73


state 51

   39 assignment: OARRAY . expression CARRAY EQ expression SEMI

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 78
    Neg         go to state 72
    Term        go to state 73


state 52

   25 Statement: LITERAL assignment .

    $default  reduce using rule 25 (Statement)


state 53

   17 ReturnStatement: RETURN . expression SEMI

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 79
    Neg         go to state 72
    Term        go to state 73


state 54

   16 bodyoffunction: variabledec Functions Statements ReturnStatement .

    $default  reduce using rule 16 (bodyoffunction)


state 55

   24 Statements: Statement Statements .

    $default  reduce using rule 24 (Statements)


state 56

   22 Type: INTARRAY OARRAY NUM . CARRAY

    CARRAY  shift, and go to state 80


state 57

   19 variabledec: VAR List Type SEMI variabledec .

    $default  reduce using rule 19 (variabledec)


state 58

   60 Neg: MINUS . Term

    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    Term  go to state 81


state 59

   57 expression: NOT . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 82
    Neg         go to state 72
    Term        go to state 73


state 60

   58 expression: ABS . expression ABS

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 83
    Neg         go to state 72
    Term        go to state 73


state 61

   52 expression: OPAREN . expression CPAREN

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 84
    Neg         go to state 72
    Term        go to state 73


state 62

   55 expression: TRUE .

    $default  reduce using rule 55 (expression)


state 63

   56 expression: FALSE .

    $default  reduce using rule 56 (expression)


state 64

   53 expression: DECIMAL .

    $default  reduce using rule 53 (expression)


state 65

   61 Term: HEX .

    $default  reduce using rule 61 (Term)


state 66

   62 Term: OCT .

    $default  reduce using rule 62 (Term)


state 67

   63 Term: BIN .

    $default  reduce using rule 63 (Term)


state 68

   65 Term: ZERO .

    $default  reduce using rule 65 (Term)


state 69

   66 Term: LITERAL . dec

    OPAREN  shift, and go to state 85
    OARRAY  shift, and go to state 86

    OPAREN    [reduce using rule 69 (dec)]
    $default  reduce using rule 69 (dec)

    dec  go to state 87


state 70

   64 Term: NUM .

    $default  reduce using rule 64 (Term)


state 71

   29 if: IF OPAREN expression . CPAREN OFUNC bodyofnested CFUNC else
   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 98
    CPAREN  shift, and go to state 99
    MULT    shift, and go to state 100


state 72

   54 expression: Neg .

    $default  reduce using rule 54 (expression)


state 73

   59 Neg: Term .

    $default  reduce using rule 59 (Neg)


state 74

   37 while: WHILE OPAREN expression . CPAREN OFUNC bodyofnested CFUNC
   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 98
    CPAREN  shift, and go to state 101
    MULT    shift, and go to state 100


state 75

   34 posstate: Statement .

    $default  reduce using rule 34 (posstate)


state 76

   32 for: FOR OPAREN posstate . OPAREN expression CPAREN posstate CPAREN OFUNC bodyofnested CFUNC

    OPAREN  shift, and go to state 102


state 77

   38 assignment: EQ expression . SEMI
   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    SEMI    shift, and go to state 103
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100


state 78

   39 assignment: OARRAY expression . CARRAY EQ expression SEMI
   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 98
    CARRAY  shift, and go to state 104
    MULT    shift, and go to state 100


state 79

   17 ReturnStatement: RETURN expression . SEMI
   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    SEMI    shift, and go to state 105
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100


state 80

   22 Type: INTARRAY OARRAY NUM CARRAY .

    $default  reduce using rule 22 (Type)


state 81

   60 Neg: MINUS Term .

    $default  reduce using rule 60 (Neg)


state 82

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression
   57           | NOT expression .

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    DEQ       [reduce using rule 57 (expression)]
    NE        [reduce using rule 57 (expression)]
    LT        [reduce using rule 57 (expression)]
    LE        [reduce using rule 57 (expression)]
    GT        [reduce using rule 57 (expression)]
    GE        [reduce using rule 57 (expression)]
    PLUS      [reduce using rule 57 (expression)]
    MINUS     [reduce using rule 57 (expression)]
    DIVIDE    [reduce using rule 57 (expression)]
    AND       [reduce using rule 57 (expression)]
    ABS       [reduce using rule 57 (expression)]
    MULT      [reduce using rule 57 (expression)]
    $default  reduce using rule 57 (expression)


state 83

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression
   58           | ABS expression . ABS

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 106
    MULT    shift, and go to state 100


state 84

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression
   52           | OPAREN expression . CPAREN

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 98
    CPAREN  shift, and go to state 107
    MULT    shift, and go to state 100


state 85

   68 dec: OPAREN . functioncall CPAREN

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    COMMA    shift, and go to state 108
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    $default  reduce using rule 70 (functioncall)

    expression    go to state 109
    Neg           go to state 72
    Term          go to state 73
    functioncall  go to state 110


state 86

   67 dec: OARRAY . expression CARRAY

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 111
    Neg         go to state 72
    Term        go to state 73


state 87

   66 Term: LITERAL dec .

    $default  reduce using rule 66 (Term)


state 88

   48 expression: expression DEQ . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 112
    Neg         go to state 72
    Term        go to state 73


state 89

   47 expression: expression NE . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 113
    Neg         go to state 72
    Term        go to state 73


state 90

   45 expression: expression LT . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 114
    Neg         go to state 72
    Term        go to state 73


state 91

   46 expression: expression LE . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 115
    Neg         go to state 72
    Term        go to state 73


state 92

   43 expression: expression GT . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 116
    Neg         go to state 72
    Term        go to state 73


state 93

   44 expression: expression GE . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 117
    Neg         go to state 72
    Term        go to state 73


state 94

   40 expression: expression PLUS . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 118
    Neg         go to state 72
    Term        go to state 73


state 95

   49 expression: expression MINUS . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 119
    Neg         go to state 72
    Term        go to state 73


state 96

   50 expression: expression DIVIDE . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 120
    Neg         go to state 72
    Term        go to state 73


state 97

   42 expression: expression AND . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 121
    Neg         go to state 72
    Term        go to state 73


state 98

   41 expression: expression ABS . ABS expression

    ABS  shift, and go to state 122


state 99

   29 if: IF OPAREN expression CPAREN . OFUNC bodyofnested CFUNC else

    OFUNC  shift, and go to state 123


state 100

   51 expression: expression MULT . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 124
    Neg         go to state 72
    Term        go to state 73


state 101

   37 while: WHILE OPAREN expression CPAREN . OFUNC bodyofnested CFUNC

    OFUNC  shift, and go to state 125


state 102

   32 for: FOR OPAREN posstate OPAREN . expression CPAREN posstate CPAREN OFUNC bodyofnested CFUNC

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 126
    Neg         go to state 72
    Term        go to state 73


state 103

   38 assignment: EQ expression SEMI .

    $default  reduce using rule 38 (assignment)


state 104

   39 assignment: OARRAY expression CARRAY . EQ expression SEMI

    EQ  shift, and go to state 127


state 105

   17 ReturnStatement: RETURN expression SEMI .

    $default  reduce using rule 17 (ReturnStatement)


state 106

   41 expression: expression ABS . ABS expression
   58           | ABS expression ABS .

    ABS  shift, and go to state 122

    ABS       [reduce using rule 58 (expression)]
    $default  reduce using rule 58 (expression)


state 107

   52 expression: OPAREN expression CPAREN .

    $default  reduce using rule 52 (expression)


state 108

   72 functioncall: COMMA . functioncall

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    COMMA    shift, and go to state 108
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    $default  reduce using rule 70 (functioncall)

    expression    go to state 109
    Neg           go to state 72
    Term          go to state 73
    functioncall  go to state 128


state 109

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression
   71 functioncall: expression . functioncall

    DEQ      shift, and go to state 88
    NE       shift, and go to state 89
    LT       shift, and go to state 90
    LE       shift, and go to state 91
    GT       shift, and go to state 92
    GE       shift, and go to state 93
    PLUS     shift, and go to state 94
    MINUS    shift, and go to state 129
    DIVIDE   shift, and go to state 96
    AND      shift, and go to state 97
    NOT      shift, and go to state 59
    COMMA    shift, and go to state 108
    ABS      shift, and go to state 130
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    MULT     shift, and go to state 100
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    $default  reduce using rule 70 (functioncall)

    expression    go to state 109
    Neg           go to state 72
    Term          go to state 73
    functioncall  go to state 131


state 110

   68 dec: OPAREN functioncall . CPAREN

    CPAREN  shift, and go to state 132


state 111

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression
   67 dec: OARRAY expression . CARRAY

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 98
    CARRAY  shift, and go to state 133
    MULT    shift, and go to state 100


state 112

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   48           | expression DEQ expression .
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    ABS       [reduce using rule 48 (expression)]
    $default  reduce using rule 48 (expression)


state 113

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   47           | expression NE expression .
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    ABS       [reduce using rule 47 (expression)]
    $default  reduce using rule 47 (expression)


state 114

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   45           | expression LT expression .
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)

    ABS       [reduce using rule 45 (expression)]
    $default  reduce using rule 45 (expression)


state 115

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   46           | expression LE expression .
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)

    ABS       [reduce using rule 46 (expression)]
    $default  reduce using rule 46 (expression)


state 116

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   43           | expression GT expression .
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)

    ABS       [reduce using rule 43 (expression)]
    $default  reduce using rule 43 (expression)


state 117

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   44           | expression GE expression .
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    LT  error (nonassociative)
    LE  error (nonassociative)
    GT  error (nonassociative)
    GE  error (nonassociative)

    ABS       [reduce using rule 44 (expression)]
    $default  reduce using rule 44 (expression)


state 118

   40 expression: expression . PLUS expression
   40           | expression PLUS expression .
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DIVIDE  shift, and go to state 96
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    ABS       [reduce using rule 40 (expression)]
    $default  reduce using rule 40 (expression)


state 119

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   49           | expression MINUS expression .
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DIVIDE  shift, and go to state 96
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    ABS       [reduce using rule 49 (expression)]
    $default  reduce using rule 49 (expression)


state 120

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   50           | expression DIVIDE expression .
   51           | expression . MULT expression

    ABS  shift, and go to state 98

    ABS       [reduce using rule 50 (expression)]
    $default  reduce using rule 50 (expression)


state 121

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   42           | expression AND expression .
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    ABS       [reduce using rule 42 (expression)]
    $default  reduce using rule 42 (expression)


state 122

   41 expression: expression ABS ABS . expression

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 134
    Neg         go to state 72
    Term        go to state 73


state 123

   29 if: IF OPAREN expression CPAREN OFUNC . bodyofnested CFUNC else

    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    FOR      shift, and go to state 38
    LITERAL  shift, and go to state 39

    $default  reduce using rule 35 (bodyofnested)

    Statement     go to state 135
    if            go to state 42
    for           go to state 43
    bodyofnested  go to state 136
    while         go to state 44


state 124

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression
   51           | expression MULT expression .

    ABS  shift, and go to state 98

    ABS       [reduce using rule 51 (expression)]
    $default  reduce using rule 51 (expression)


state 125

   37 while: WHILE OPAREN expression CPAREN OFUNC . bodyofnested CFUNC

    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    FOR      shift, and go to state 38
    LITERAL  shift, and go to state 39

    $default  reduce using rule 35 (bodyofnested)

    Statement     go to state 135
    if            go to state 42
    for           go to state 43
    bodyofnested  go to state 137
    while         go to state 44


state 126

   32 for: FOR OPAREN posstate OPAREN expression . CPAREN posstate CPAREN OFUNC bodyofnested CFUNC
   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 98
    CPAREN  shift, and go to state 138
    MULT    shift, and go to state 100


state 127

   39 assignment: OARRAY expression CARRAY EQ . expression SEMI

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 139
    Neg         go to state 72
    Term        go to state 73


state 128

   72 functioncall: COMMA functioncall .

    $default  reduce using rule 72 (functioncall)


state 129

   49 expression: expression MINUS . expression
   60 Neg: MINUS . Term

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 119
    Neg         go to state 72
    Term        go to state 140


state 130

   41 expression: expression ABS . ABS expression
   58           | ABS . expression ABS

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 141
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 83
    Neg         go to state 72
    Term        go to state 73


state 131

   71 functioncall: expression functioncall .

    $default  reduce using rule 71 (functioncall)


state 132

   68 dec: OPAREN functioncall CPAREN .

    $default  reduce using rule 68 (dec)


state 133

   67 dec: OARRAY expression CARRAY .

    $default  reduce using rule 67 (dec)


state 134

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   41           | expression ABS ABS expression .
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100

    DEQ       [reduce using rule 41 (expression)]
    NE        [reduce using rule 41 (expression)]
    LT        [reduce using rule 41 (expression)]
    LE        [reduce using rule 41 (expression)]
    GT        [reduce using rule 41 (expression)]
    GE        [reduce using rule 41 (expression)]
    PLUS      [reduce using rule 41 (expression)]
    MINUS     [reduce using rule 41 (expression)]
    DIVIDE    [reduce using rule 41 (expression)]
    AND       [reduce using rule 41 (expression)]
    ABS       [reduce using rule 41 (expression)]
    MULT      [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)


state 135

   36 bodyofnested: Statement . bodyofnested

    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    FOR      shift, and go to state 38
    LITERAL  shift, and go to state 39

    $default  reduce using rule 35 (bodyofnested)

    Statement     go to state 135
    if            go to state 42
    for           go to state 43
    bodyofnested  go to state 142
    while         go to state 44


state 136

   29 if: IF OPAREN expression CPAREN OFUNC bodyofnested . CFUNC else

    CFUNC  shift, and go to state 143


state 137

   37 while: WHILE OPAREN expression CPAREN OFUNC bodyofnested . CFUNC

    CFUNC  shift, and go to state 144


state 138

   32 for: FOR OPAREN posstate OPAREN expression CPAREN . posstate CPAREN OFUNC bodyofnested CFUNC

    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    FOR      shift, and go to state 38
    LITERAL  shift, and go to state 39

    $default  reduce using rule 33 (posstate)

    Statement  go to state 75
    if         go to state 42
    for        go to state 43
    posstate   go to state 145
    while      go to state 44


state 139

   39 assignment: OARRAY expression CARRAY EQ expression . SEMI
   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    SEMI    shift, and go to state 146
    ABS     shift, and go to state 98
    MULT    shift, and go to state 100


state 140

   59 Neg: Term .
   60    | MINUS Term .

    DEQ       reduce using rule 59 (Neg)
    DEQ       [reduce using rule 60 (Neg)]
    NE        reduce using rule 59 (Neg)
    NE        [reduce using rule 60 (Neg)]
    LT        reduce using rule 59 (Neg)
    LT        [reduce using rule 60 (Neg)]
    LE        reduce using rule 59 (Neg)
    LE        [reduce using rule 60 (Neg)]
    GT        reduce using rule 59 (Neg)
    GT        [reduce using rule 60 (Neg)]
    GE        reduce using rule 59 (Neg)
    GE        [reduce using rule 60 (Neg)]
    PLUS      reduce using rule 59 (Neg)
    PLUS      [reduce using rule 60 (Neg)]
    MINUS     reduce using rule 59 (Neg)
    MINUS     [reduce using rule 60 (Neg)]
    DIVIDE    reduce using rule 59 (Neg)
    DIVIDE    [reduce using rule 60 (Neg)]
    AND       reduce using rule 59 (Neg)
    AND       [reduce using rule 60 (Neg)]
    NOT       reduce using rule 59 (Neg)
    NOT       [reduce using rule 60 (Neg)]
    COMMA     reduce using rule 59 (Neg)
    COMMA     [reduce using rule 60 (Neg)]
    ABS       reduce using rule 59 (Neg)
    ABS       [reduce using rule 60 (Neg)]
    OPAREN    reduce using rule 59 (Neg)
    OPAREN    [reduce using rule 60 (Neg)]
    CPAREN    reduce using rule 59 (Neg)
    CPAREN    [reduce using rule 60 (Neg)]
    TRUE      reduce using rule 59 (Neg)
    TRUE      [reduce using rule 60 (Neg)]
    FALSE     reduce using rule 59 (Neg)
    FALSE     [reduce using rule 60 (Neg)]
    DECIMAL   reduce using rule 59 (Neg)
    DECIMAL   [reduce using rule 60 (Neg)]
    HEX       reduce using rule 59 (Neg)
    HEX       [reduce using rule 60 (Neg)]
    OCT       reduce using rule 59 (Neg)
    OCT       [reduce using rule 60 (Neg)]
    BIN       reduce using rule 59 (Neg)
    BIN       [reduce using rule 60 (Neg)]
    ZERO      reduce using rule 59 (Neg)
    ZERO      [reduce using rule 60 (Neg)]
    MULT      reduce using rule 59 (Neg)
    MULT      [reduce using rule 60 (Neg)]
    LITERAL   reduce using rule 59 (Neg)
    LITERAL   [reduce using rule 60 (Neg)]
    NUM       reduce using rule 59 (Neg)
    NUM       [reduce using rule 60 (Neg)]
    $default  reduce using rule 59 (Neg)


state 141

   41 expression: expression ABS ABS . expression
   58           | ABS . expression ABS

    MINUS    shift, and go to state 58
    NOT      shift, and go to state 59
    ABS      shift, and go to state 60
    OPAREN   shift, and go to state 61
    TRUE     shift, and go to state 62
    FALSE    shift, and go to state 63
    DECIMAL  shift, and go to state 64
    HEX      shift, and go to state 65
    OCT      shift, and go to state 66
    BIN      shift, and go to state 67
    ZERO     shift, and go to state 68
    LITERAL  shift, and go to state 69
    NUM      shift, and go to state 70

    expression  go to state 147
    Neg         go to state 72
    Term        go to state 73


state 142

   36 bodyofnested: Statement bodyofnested .

    $default  reduce using rule 36 (bodyofnested)


state 143

   29 if: IF OPAREN expression CPAREN OFUNC bodyofnested CFUNC . else

    ELSE  shift, and go to state 148

    $default  reduce using rule 30 (else)

    else  go to state 149


state 144

   37 while: WHILE OPAREN expression CPAREN OFUNC bodyofnested CFUNC .

    $default  reduce using rule 37 (while)


state 145

   32 for: FOR OPAREN posstate OPAREN expression CPAREN posstate . CPAREN OFUNC bodyofnested CFUNC

    CPAREN  shift, and go to state 150


state 146

   39 assignment: OARRAY expression CARRAY EQ expression SEMI .

    $default  reduce using rule 39 (assignment)


state 147

   40 expression: expression . PLUS expression
   41           | expression . ABS ABS expression
   41           | expression ABS ABS expression .
   42           | expression . AND expression
   43           | expression . GT expression
   44           | expression . GE expression
   45           | expression . LT expression
   46           | expression . LE expression
   47           | expression . NE expression
   48           | expression . DEQ expression
   49           | expression . MINUS expression
   50           | expression . DIVIDE expression
   51           | expression . MULT expression
   58           | ABS expression . ABS

    DEQ     shift, and go to state 88
    NE      shift, and go to state 89
    LT      shift, and go to state 90
    LE      shift, and go to state 91
    GT      shift, and go to state 92
    GE      shift, and go to state 93
    PLUS    shift, and go to state 94
    MINUS   shift, and go to state 95
    DIVIDE  shift, and go to state 96
    AND     shift, and go to state 97
    ABS     shift, and go to state 106
    MULT    shift, and go to state 100

    DEQ       [reduce using rule 41 (expression)]
    NE        [reduce using rule 41 (expression)]
    LT        [reduce using rule 41 (expression)]
    LE        [reduce using rule 41 (expression)]
    GT        [reduce using rule 41 (expression)]
    GE        [reduce using rule 41 (expression)]
    PLUS      [reduce using rule 41 (expression)]
    MINUS     [reduce using rule 41 (expression)]
    DIVIDE    [reduce using rule 41 (expression)]
    AND       [reduce using rule 41 (expression)]
    ABS       [reduce using rule 41 (expression)]
    MULT      [reduce using rule 41 (expression)]
    $default  reduce using rule 41 (expression)


state 148

   31 else: ELSE . OFUNC bodyofnested CFUNC

    OFUNC  shift, and go to state 151


state 149

   29 if: IF OPAREN expression CPAREN OFUNC bodyofnested CFUNC else .

    $default  reduce using rule 29 (if)


state 150

   32 for: FOR OPAREN posstate OPAREN expression CPAREN posstate CPAREN . OFUNC bodyofnested CFUNC

    OFUNC  shift, and go to state 152


state 151

   31 else: ELSE OFUNC . bodyofnested CFUNC

    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    FOR      shift, and go to state 38
    LITERAL  shift, and go to state 39

    $default  reduce using rule 35 (bodyofnested)

    Statement     go to state 135
    if            go to state 42
    for           go to state 43
    bodyofnested  go to state 153
    while         go to state 44


state 152

   32 for: FOR OPAREN posstate OPAREN expression CPAREN posstate CPAREN OFUNC . bodyofnested CFUNC

    IF       shift, and go to state 36
    WHILE    shift, and go to state 37
    FOR      shift, and go to state 38
    LITERAL  shift, and go to state 39

    $default  reduce using rule 35 (bodyofnested)

    Statement     go to state 135
    if            go to state 42
    for           go to state 43
    bodyofnested  go to state 154
    while         go to state 44


state 153

   31 else: ELSE OFUNC bodyofnested . CFUNC

    CFUNC  shift, and go to state 155


state 154

   32 for: FOR OPAREN posstate OPAREN expression CPAREN posstate CPAREN OFUNC bodyofnested . CFUNC

    CFUNC  shift, and go to state 156


state 155

   31 else: ELSE OFUNC bodyofnested CFUNC .

    $default  reduce using rule 31 (else)


state 156

   32 for: FOR OPAREN posstate OPAREN expression CPAREN posstate CPAREN OFUNC bodyofnested CFUNC .

    $default  reduce using rule 32 (for)
